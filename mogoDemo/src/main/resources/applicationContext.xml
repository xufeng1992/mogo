<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

       <!--自动扫描-->
       <context:component-scan base-package="dao"/>
       <context:component-scan base-package="service"/>

       <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
              <property name="location" value="classpath:config/jdbc.properties" />
       </bean>
       <!-- mysql数据源-->
       <bean id="mySqlDataSource" class="org.apache.commons.dbcp.BasicDataSource"
             destroy-method="close">
              <property name="driverClassName" value="${jdbc.mysql.driver}"/>
              <property name="url" value="${jdbc.mysql.url}"/>
              <property name="username" value="${jdbc.mysql.username}"/>
              <property name="password" value="${jdbc.mysql.password}"/>
              <property name="initialSize" value="${jdbc.initialSize}"/>
              <property name="minIdle" value="${jdbc.minIdle}"/>
              <property name="maxIdle" value="${jdbc.maxIdle}"/>
              <property name="maxActive" value="${jdbc.maxActive}"/>
              <property name="maxWait" value="${jdbc.maxWait}"/>
              <property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}"/>
              <property name="removeAbandoned" value="${jdbc.removeAbandoned}"/>
              <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>
              <property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
              <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
              <property name="numTestsPerEvictionRun" value="${jdbc.numTestsPerEvictionRun}"/>
              <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
       </bean>

       <!-- 数据源选择，targetDataSources中选择数据源，若找不到，则使用defaultTargetDataSource-->
       <!--<bean id="multipleDataSource" class="com.liuwenjian.common.MultipleDataSource">-->
              <!--<property name="defaultTargetDataSource" ref="mySqlDataSource"/>-->
              <!--<property name="targetDataSources">-->
                     <!--<map>-->
                            <!--<entry key="mySqlDataSource" value-ref="mySqlDataSource"/>-->
                            <!--<entry key="sqlServerDataSource" value-ref="sqlServerDataSource"/>-->
                     <!--</map>-->
              <!--</property>-->
       <!--</bean>-->
    <!-- 配置mybatis的sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="mySqlDataSource" />
        <!-- 自动扫描mappers.xml文件 ，要加上classpath:com/...-->
        <property name="mapperLocations" value="classpath*:dao/mapper/*.xml"></property>
        <!-- mybatis配置文件 -->
        <!--<property name="configLocation" value="classpath:config/mybatis-config.xml"></property>-->
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.liuwenjian.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="mySqlDataSource" />
    </bean>

    <!-- 配置事务通知属性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 定义事务传播属性 -->
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="edit*" propagation="REQUIRED" />
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="new*" propagation="REQUIRED" />
            <tx:method name="set*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="change*" propagation="REQUIRED" />
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
            <tx:method name="load*" propagation="REQUIRED" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" read-only="true" />
        </tx:attributes>
    </tx:advice>

    <!-- 配置事务切面 -->
    <aop:config>
        <aop:pointcut id="serviceOperation"
                      expression="execution(* service.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
    </aop:config>
</beans>